// <auto-generated />
using System;
using AssetTracketDB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AssetTracketDB.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AssetTracketDB.Asset", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<string>("Manufacturer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OfficeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateOnly>("PurchaseDate")
                        .HasColumnType("date");

                    b.HasKey("Id");

                    b.HasIndex("OfficeId");

                    b.ToTable("Asset");

                    b.HasDiscriminator().HasValue("Asset");

                    b.UseTphMappingStrategy();
                });

            modelBuilder.Entity("AssetTracketDB.Currencies", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Rate")
                        .HasColumnType("decimal(18, 4)");

                    b.HasKey("Name");

                    b.ToTable("Currencies");
                });

            modelBuilder.Entity("AssetTracketDB.Office", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Currency")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Offices");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Currency = "SEK",
                            Name = "SWE"
                        },
                        new
                        {
                            Id = 2,
                            Currency = "USD",
                            Name = "USA"
                        },
                        new
                        {
                            Id = 3,
                            Currency = "EUR",
                            Name = "FIN"
                        });
                });

            modelBuilder.Entity("AssetTracketDB.Laptop", b =>
                {
                    b.HasBaseType("AssetTracketDB.Asset");

                    b.HasDiscriminator().HasValue("Laptop");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Currency = "SEK",
                            Manufacturer = "Apple",
                            ModelName = "MacBook",
                            OfficeId = 1,
                            Price = 19990m,
                            PurchaseDate = new DateOnly(2021, 3, 9)
                        },
                        new
                        {
                            Id = 2,
                            Currency = "SEK",
                            Manufacturer = "Apple",
                            ModelName = "MacBook Pro",
                            OfficeId = 1,
                            Price = 21500m,
                            PurchaseDate = new DateOnly(2021, 7, 29)
                        },
                        new
                        {
                            Id = 3,
                            Currency = "SEK",
                            Manufacturer = "Apple",
                            ModelName = "MacBook Air",
                            OfficeId = 1,
                            Price = 20899m,
                            PurchaseDate = new DateOnly(2023, 7, 15)
                        },
                        new
                        {
                            Id = 4,
                            Currency = "USD",
                            Manufacturer = "Asus",
                            ModelName = "Vivobook",
                            OfficeId = 2,
                            Price = 1899m,
                            PurchaseDate = new DateOnly(2023, 12, 23)
                        },
                        new
                        {
                            Id = 5,
                            Currency = "USD",
                            Manufacturer = "Asus",
                            ModelName = "Zenbook",
                            OfficeId = 2,
                            Price = 1299m,
                            PurchaseDate = new DateOnly(2023, 12, 21)
                        },
                        new
                        {
                            Id = 6,
                            Currency = "USD",
                            Manufacturer = "Asus",
                            ModelName = "ROG",
                            OfficeId = 2,
                            Price = 2099m,
                            PurchaseDate = new DateOnly(2023, 8, 4)
                        },
                        new
                        {
                            Id = 7,
                            Currency = "EUR",
                            Manufacturer = "Apple",
                            ModelName = "MacBook Pro",
                            OfficeId = 3,
                            Price = 1900m,
                            PurchaseDate = new DateOnly(2021, 3, 21)
                        },
                        new
                        {
                            Id = 8,
                            Currency = "EUR",
                            Manufacturer = "HP",
                            ModelName = "Spectre",
                            OfficeId = 3,
                            Price = 1300m,
                            PurchaseDate = new DateOnly(2023, 4, 13)
                        },
                        new
                        {
                            Id = 9,
                            Currency = "EUR",
                            Manufacturer = "Dell",
                            ModelName = "Inspiron",
                            OfficeId = 3,
                            Price = 1100m,
                            PurchaseDate = new DateOnly(2023, 5, 9)
                        });
                });

            modelBuilder.Entity("AssetTracketDB.Mobile", b =>
                {
                    b.HasBaseType("AssetTracketDB.Asset");

                    b.HasDiscriminator().HasValue("Mobile");

                    b.HasData(
                        new
                        {
                            Id = 10,
                            Currency = "SEK",
                            Manufacturer = "Apple",
                            ModelName = "iPhone 14",
                            OfficeId = 1,
                            Price = 12990m,
                            PurchaseDate = new DateOnly(2023, 7, 2)
                        },
                        new
                        {
                            Id = 11,
                            Currency = "SEK",
                            Manufacturer = "Apple",
                            ModelName = "iPhone 13",
                            OfficeId = 1,
                            Price = 11490m,
                            PurchaseDate = new DateOnly(2023, 10, 11)
                        },
                        new
                        {
                            Id = 12,
                            Currency = "SEK",
                            Manufacturer = "Samsung",
                            ModelName = "Galaxy S22",
                            OfficeId = 1,
                            Price = 9990m,
                            PurchaseDate = new DateOnly(2023, 8, 3)
                        },
                        new
                        {
                            Id = 13,
                            Currency = "USD",
                            Manufacturer = "Apple",
                            ModelName = "iPhone 14 Pro",
                            OfficeId = 2,
                            Price = 999m,
                            PurchaseDate = new DateOnly(2023, 9, 15)
                        },
                        new
                        {
                            Id = 14,
                            Currency = "USD",
                            Manufacturer = "Samsung",
                            ModelName = "Galaxy S22",
                            OfficeId = 2,
                            Price = 799m,
                            PurchaseDate = new DateOnly(2022, 4, 17)
                        },
                        new
                        {
                            Id = 15,
                            Currency = "USD",
                            Manufacturer = "Google",
                            ModelName = "Pixel 7",
                            OfficeId = 2,
                            Price = 699m,
                            PurchaseDate = new DateOnly(2022, 9, 23)
                        },
                        new
                        {
                            Id = 16,
                            Currency = "EUR",
                            Manufacturer = "Apple",
                            ModelName = "iPhone 14",
                            OfficeId = 3,
                            Price = 1100m,
                            PurchaseDate = new DateOnly(2023, 1, 25)
                        },
                        new
                        {
                            Id = 17,
                            Currency = "EUR",
                            Manufacturer = "Samsung",
                            ModelName = "Galaxy S22",
                            OfficeId = 3,
                            Price = 900m,
                            PurchaseDate = new DateOnly(2021, 8, 21)
                        },
                        new
                        {
                            Id = 18,
                            Currency = "EUR",
                            Manufacturer = "Google",
                            ModelName = "Pixel 7",
                            OfficeId = 3,
                            Price = 800m,
                            PurchaseDate = new DateOnly(2021, 3, 31)
                        });
                });

            modelBuilder.Entity("AssetTracketDB.Asset", b =>
                {
                    b.HasOne("AssetTracketDB.Office", "Office")
                        .WithMany("Assets")
                        .HasForeignKey("OfficeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Office");
                });

            modelBuilder.Entity("AssetTracketDB.Office", b =>
                {
                    b.Navigation("Assets");
                });
#pragma warning restore 612, 618
        }
    }
}
